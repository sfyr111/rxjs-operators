{"dependencies":[{"name":"/Users/yangran/course/rxjs/rxjs-operators/package.json","includedInParent":true,"mtime":1540374354261},{"name":"rxjs","loc":{"line":1,"column":42}},{"name":"rxjs/operators","loc":{"line":2,"column":38}}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _rxjs = require('rxjs');\n\nvar _operators = require('rxjs/operators');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MyMergeMapSubscriber = function (_Subscriber) {\n  _inherits(MyMergeMapSubscriber, _Subscriber);\n\n  function MyMergeMapSubscriber(sub, fn) {\n    _classCallCheck(this, MyMergeMapSubscriber);\n\n    var _this = _possibleConstructorReturn(this, (MyMergeMapSubscriber.__proto__ || Object.getPrototypeOf(MyMergeMapSubscriber)).call(this, sub));\n\n    _this.fn = fn;\n    return _this;\n  }\n\n  _createClass(MyMergeMapSubscriber, [{\n    key: '_next',\n    value: function _next(value) {\n      var _this2 = this;\n\n      console.log('outer', value);\n      var o$ = this.fn(value);\n\n      o$.subscribe({\n        next: function next(value) {\n          console.log('inner', value);\n          _this2.destination.next(value);\n        }\n      });\n    }\n  }]);\n\n  return MyMergeMapSubscriber;\n}(_rxjs.Subscriber);\n\nvar myMergeMap = function myMergeMap(fn) {\n  return function (source) {\n    return source.lift({\n      call: function call(sub, source) {\n        source.subscribe(new MyMergeMapSubscriber(sub, fn));\n      }\n    });\n  };\n};\n\nvar observable$ = (0, _rxjs.fromEvent)(document, 'click').pipe((0, _operators.scan)(function (i) {\n  return i + 1;\n}, 0),\n// mergeMap(value => of(value).pipe(delay(500)))\nmyMergeMap(function (value) {\n  return (0, _rxjs.of)(value).pipe((0, _operators.delay)(500));\n}) // mergeMap 源码实现\n);\n\nvar subscribe = {\n  next: function next(value) {\n    console.log('equal:', value);\n    // 使用 mergeMap\n    // of(value).pipe(delay(500)).subscribe({\n    //   next: value => {\n    //     console.log('inner', value)\n    //   }\n    // })\n  },\n  complete: function complete() {\n    return console.log('=====done====');\n  },\n  error: function error() {\n    return console.log('error');\n  }\n};\n\nobservable$.subscribe(subscribe);","map":{"mappings":[{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"name":"MyMergeMapSubscriber","generated":{"line":15,"column":4},"source":"index.js","original":{"line":4,"column":6}},{"generated":{"line":18,"column":0},"source":"index.js","original":{"line":5,"column":2}},{"name":"sub","generated":{"line":18,"column":32},"source":"index.js","original":{"line":5,"column":14}},{"generated":{"line":18,"column":35},"source":"index.js","original":{"line":5,"column":2}},{"name":"fn","generated":{"line":18,"column":37},"source":"index.js","original":{"line":5,"column":19}},{"generated":{"line":18,"column":39},"source":"index.js","original":{"line":5,"column":2}},{"generated":{"line":18,"column":41},"source":"index.js","original":{"line":5,"column":23}},{"generated":{"line":19,"column":0},"source":"index.js","original":{"line":5,"column":23}},{"generated":{"line":21,"column":0},"source":"index.js","original":{"line":5,"column":23}},{"name":"sub","generated":{"line":21,"column":140},"source":"index.js","original":{"line":6,"column":10}},{"generated":{"line":21,"column":143},"source":"index.js","original":{"line":5,"column":23}},{"generated":{"line":23,"column":0},"source":"index.js","original":{"line":7,"column":4}},{"name":"fn","generated":{"line":23,"column":10},"source":"index.js","original":{"line":7,"column":9}},{"generated":{"line":23,"column":12},"source":"index.js","original":{"line":7,"column":4}},{"name":"fn","generated":{"line":23,"column":15},"source":"index.js","original":{"line":7,"column":14}},{"generated":{"line":23,"column":17},"source":"index.js","original":{"line":7,"column":4}},{"generated":{"line":24,"column":0},"source":"index.js","original":{"line":5,"column":23}},{"generated":{"line":25,"column":0},"source":"index.js","original":{"line":8,"column":3}},{"name":"value","generated":{"line":29,"column":26},"source":"index.js","original":{"line":10,"column":8}},{"generated":{"line":29,"column":33},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"name":"console","generated":{"line":32,"column":0},"source":"index.js","original":{"line":11,"column":4}},{"name":"log","generated":{"line":32,"column":14},"source":"index.js","original":{"line":11,"column":12}},{"generated":{"line":32,"column":17},"source":"index.js","original":{"line":11,"column":4}},{"generated":{"line":32,"column":18},"source":"index.js","original":{"line":11,"column":16}},{"generated":{"line":32,"column":25},"source":"index.js","original":{"line":11,"column":4}},{"name":"value","generated":{"line":32,"column":27},"source":"index.js","original":{"line":11,"column":25}},{"generated":{"line":32,"column":32},"source":"index.js","original":{"line":11,"column":4}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":12,"column":4}},{"name":"o$","generated":{"line":33,"column":10},"source":"index.js","original":{"line":12,"column":10}},{"generated":{"line":33,"column":15},"source":"index.js","original":{"line":12,"column":15}},{"name":"fn","generated":{"line":33,"column":20},"source":"index.js","original":{"line":12,"column":20}},{"generated":{"line":33,"column":22},"source":"index.js","original":{"line":12,"column":15}},{"name":"value","generated":{"line":33,"column":23},"source":"index.js","original":{"line":12,"column":23}},{"generated":{"line":33,"column":28},"source":"index.js","original":{"line":12,"column":15}},{"generated":{"line":33,"column":29},"source":"index.js","original":{"line":12,"column":4}},{"name":"o$","generated":{"line":35,"column":0},"source":"index.js","original":{"line":14,"column":4}},{"name":"subscribe","generated":{"line":35,"column":9},"source":"index.js","original":{"line":14,"column":7}},{"generated":{"line":35,"column":18},"source":"index.js","original":{"line":14,"column":4}},{"generated":{"line":35,"column":19},"source":"index.js","original":{"line":14,"column":17}},{"name":"next","generated":{"line":36,"column":0},"source":"index.js","original":{"line":15,"column":6}},{"generated":{"line":36,"column":14},"source":"index.js","original":{"line":15,"column":12}},{"generated":{"line":36,"column":35},"source":"index.js","original":{"line":15,"column":21}},{"name":"console","generated":{"line":37,"column":0},"source":"index.js","original":{"line":16,"column":8}},{"name":"log","generated":{"line":37,"column":18},"source":"index.js","original":{"line":16,"column":16}},{"generated":{"line":37,"column":21},"source":"index.js","original":{"line":16,"column":8}},{"generated":{"line":37,"column":22},"source":"index.js","original":{"line":16,"column":20}},{"generated":{"line":37,"column":29},"source":"index.js","original":{"line":16,"column":8}},{"name":"value","generated":{"line":37,"column":31},"source":"index.js","original":{"line":16,"column":29}},{"generated":{"line":37,"column":36},"source":"index.js","original":{"line":16,"column":8}},{"generated":{"line":38,"column":0},"source":"index.js","original":{"line":17,"column":8}},{"name":"destination","generated":{"line":38,"column":17},"source":"index.js","original":{"line":17,"column":13}},{"generated":{"line":38,"column":28},"source":"index.js","original":{"line":17,"column":8}},{"name":"next","generated":{"line":38,"column":29},"source":"index.js","original":{"line":17,"column":25}},{"generated":{"line":38,"column":33},"source":"index.js","original":{"line":17,"column":8}},{"name":"value","generated":{"line":38,"column":34},"source":"index.js","original":{"line":17,"column":30}},{"generated":{"line":38,"column":39},"source":"index.js","original":{"line":17,"column":8}},{"generated":{"line":39,"column":0},"source":"index.js","original":{"line":18,"column":7}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":14,"column":17}},{"generated":{"line":40,"column":7},"source":"index.js","original":{"line":14,"column":4}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":20,"column":3}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":23,"column":0}},{"name":"myMergeMap","generated":{"line":47,"column":4},"source":"index.js","original":{"line":23,"column":6}},{"generated":{"line":47,"column":17},"source":"index.js","original":{"line":23,"column":19}},{"name":"myMergeMap","generated":{"line":47,"column":26},"source":"index.js","original":{"line":23,"column":6}},{"generated":{"line":47,"column":36},"source":"index.js","original":{"line":23,"column":19}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":23,"column":19}},{"generated":{"line":48,"column":9},"source":"index.js","original":{"line":23,"column":25}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":23,"column":25}},{"name":"source","generated":{"line":49,"column":11},"source":"index.js","original":{"line":23,"column":35}},{"name":"lift","generated":{"line":49,"column":18},"source":"index.js","original":{"line":23,"column":42}},{"generated":{"line":49,"column":22},"source":"index.js","original":{"line":23,"column":35}},{"generated":{"line":49,"column":23},"source":"index.js","original":{"line":23,"column":47}},{"name":"call","generated":{"line":50,"column":0},"source":"index.js","original":{"line":24,"column":2}},{"generated":{"line":50,"column":10},"source":"index.js","original":{"line":23,"column":47}},{"name":"sub","generated":{"line":50,"column":26},"source":"index.js","original":{"line":24,"column":7}},{"generated":{"line":50,"column":29},"source":"index.js","original":{"line":23,"column":47}},{"name":"source","generated":{"line":50,"column":31},"source":"index.js","original":{"line":24,"column":12}},{"generated":{"line":50,"column":37},"source":"index.js","original":{"line":23,"column":47}},{"generated":{"line":50,"column":39},"source":"index.js","original":{"line":24,"column":20}},{"name":"source","generated":{"line":51,"column":0},"source":"index.js","original":{"line":25,"column":4}},{"name":"subscribe","generated":{"line":51,"column":15},"source":"index.js","original":{"line":25,"column":11}},{"generated":{"line":51,"column":24},"source":"index.js","original":{"line":25,"column":4}},{"generated":{"line":51,"column":25},"source":"index.js","original":{"line":25,"column":21}},{"name":"MyMergeMapSubscriber","generated":{"line":51,"column":29},"source":"index.js","original":{"line":25,"column":25}},{"generated":{"line":51,"column":49},"source":"index.js","original":{"line":25,"column":21}},{"name":"sub","generated":{"line":51,"column":50},"source":"index.js","original":{"line":25,"column":46}},{"generated":{"line":51,"column":53},"source":"index.js","original":{"line":25,"column":21}},{"name":"fn","generated":{"line":51,"column":55},"source":"index.js","original":{"line":25,"column":51}},{"generated":{"line":51,"column":57},"source":"index.js","original":{"line":25,"column":21}},{"generated":{"line":51,"column":58},"source":"index.js","original":{"line":25,"column":4}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":26,"column":3}},{"generated":{"line":53,"column":0},"source":"index.js","original":{"line":23,"column":47}},{"generated":{"line":53,"column":5},"source":"index.js","original":{"line":23,"column":35}},{"generated":{"line":53,"column":6},"source":"index.js","original":{"line":23,"column":25}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":23,"column":25}},{"generated":{"line":54,"column":3},"source":"index.js","original":{"line":23,"column":19}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":23,"column":19}},{"generated":{"line":55,"column":1},"source":"index.js","original":{"line":23,"column":0}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":29,"column":0}},{"name":"observable$","generated":{"line":57,"column":4},"source":"index.js","original":{"line":29,"column":6}},{"generated":{"line":57,"column":18},"source":"index.js","original":{"line":29,"column":20}},{"name":"document","generated":{"line":57,"column":39},"source":"index.js","original":{"line":30,"column":2}},{"generated":{"line":57,"column":47},"source":"index.js","original":{"line":29,"column":20}},{"generated":{"line":57,"column":49},"source":"index.js","original":{"line":31,"column":2}},{"generated":{"line":57,"column":56},"source":"index.js","original":{"line":29,"column":20}},{"name":"pipe","generated":{"line":57,"column":58},"source":"index.js","original":{"line":32,"column":2}},{"generated":{"line":57,"column":62},"source":"index.js","original":{"line":29,"column":20}},{"generated":{"line":57,"column":63},"source":"index.js","original":{"line":33,"column":2}},{"generated":{"line":57,"column":84},"source":"index.js","original":{"line":33,"column":7}},{"generated":{"line":58,"column":0},"source":"index.js","original":{"line":33,"column":7}},{"name":"i","generated":{"line":58,"column":9},"source":"index.js","original":{"line":33,"column":12}},{"generated":{"line":58,"column":13},"source":"index.js","original":{"line":33,"column":16}},{"generated":{"line":58,"column":14},"source":"index.js","original":{"line":33,"column":7}},{"generated":{"line":59,"column":0},"source":"index.js","original":{"line":33,"column":7}},{"generated":{"line":59,"column":1},"source":"index.js","original":{"line":33,"column":2}},{"generated":{"line":59,"column":3},"source":"index.js","original":{"line":33,"column":19}},{"generated":{"line":59,"column":4},"source":"index.js","original":{"line":33,"column":2}},{"generated":{"line":59,"column":5},"source":"index.js","original":{"line":29,"column":20}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":34,"column":2}},{"name":"myMergeMap","generated":{"line":61,"column":0},"source":"index.js","original":{"line":35,"column":2}},{"generated":{"line":61,"column":11},"source":"index.js","original":{"line":35,"column":13}},{"generated":{"line":62,"column":0},"source":"index.js","original":{"line":35,"column":13}},{"generated":{"line":62,"column":9},"source":"index.js","original":{"line":35,"column":22}},{"name":"value","generated":{"line":62,"column":23},"source":"index.js","original":{"line":35,"column":25}},{"generated":{"line":62,"column":28},"source":"index.js","original":{"line":35,"column":22}},{"name":"pipe","generated":{"line":62,"column":30},"source":"index.js","original":{"line":35,"column":32}},{"generated":{"line":62,"column":34},"source":"index.js","original":{"line":35,"column":22}},{"generated":{"line":62,"column":35},"source":"index.js","original":{"line":35,"column":37}},{"generated":{"line":62,"column":57},"source":"index.js","original":{"line":35,"column":43}},{"generated":{"line":62,"column":60},"source":"index.js","original":{"line":35,"column":37}},{"generated":{"line":62,"column":61},"source":"index.js","original":{"line":35,"column":22}},{"generated":{"line":62,"column":62},"source":"index.js","original":{"line":35,"column":13}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":35,"column":13}},{"generated":{"line":63,"column":1},"source":"index.js","original":{"line":35,"column":2}},{"generated":{"line":63,"column":2},"source":"index.js","original":{"line":29,"column":20}},{"generated":{"line":63,"column":3},"source":"index.js","original":{"line":35,"column":50}},{"generated":{"line":64,"column":0},"source":"index.js","original":{"line":29,"column":20}},{"generated":{"line":64,"column":1},"source":"index.js","original":{"line":29,"column":0}},{"generated":{"line":66,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"name":"subscribe","generated":{"line":66,"column":4},"source":"index.js","original":{"line":38,"column":6}},{"generated":{"line":66,"column":16},"source":"index.js","original":{"line":38,"column":18}},{"name":"next","generated":{"line":67,"column":0},"source":"index.js","original":{"line":39,"column":2}},{"generated":{"line":67,"column":8},"source":"index.js","original":{"line":39,"column":8}},{"generated":{"line":67,"column":29},"source":"index.js","original":{"line":39,"column":17}},{"name":"console","generated":{"line":68,"column":0},"source":"index.js","original":{"line":40,"column":4}},{"name":"log","generated":{"line":68,"column":12},"source":"index.js","original":{"line":40,"column":12}},{"generated":{"line":68,"column":15},"source":"index.js","original":{"line":40,"column":4}},{"generated":{"line":68,"column":16},"source":"index.js","original":{"line":40,"column":16}},{"generated":{"line":68,"column":24},"source":"index.js","original":{"line":40,"column":4}},{"name":"value","generated":{"line":68,"column":26},"source":"index.js","original":{"line":40,"column":26}},{"generated":{"line":68,"column":31},"source":"index.js","original":{"line":40,"column":4}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":41,"column":4}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":42,"column":4}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":43,"column":4}},{"generated":{"line":72,"column":0},"source":"index.js","original":{"line":44,"column":4}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":45,"column":4}},{"generated":{"line":74,"column":0},"source":"index.js","original":{"line":46,"column":4}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":47,"column":3}},{"generated":{"line":75,"column":3},"source":"index.js","original":{"line":38,"column":18}},{"name":"complete","generated":{"line":76,"column":0},"source":"index.js","original":{"line":48,"column":2}},{"generated":{"line":76,"column":12},"source":"index.js","original":{"line":48,"column":12}},{"generated":{"line":77,"column":0},"source":"index.js","original":{"line":48,"column":12}},{"name":"console","generated":{"line":77,"column":11},"source":"index.js","original":{"line":48,"column":18}},{"name":"log","generated":{"line":77,"column":19},"source":"index.js","original":{"line":48,"column":26}},{"generated":{"line":77,"column":22},"source":"index.js","original":{"line":48,"column":18}},{"generated":{"line":77,"column":23},"source":"index.js","original":{"line":48,"column":30}},{"generated":{"line":77,"column":38},"source":"index.js","original":{"line":48,"column":18}},{"generated":{"line":77,"column":39},"source":"index.js","original":{"line":48,"column":12}},{"generated":{"line":78,"column":0},"source":"index.js","original":{"line":48,"column":12}},{"generated":{"line":78,"column":3},"source":"index.js","original":{"line":38,"column":18}},{"name":"error","generated":{"line":79,"column":0},"source":"index.js","original":{"line":49,"column":2}},{"generated":{"line":79,"column":9},"source":"index.js","original":{"line":49,"column":9}},{"generated":{"line":80,"column":0},"source":"index.js","original":{"line":49,"column":9}},{"name":"console","generated":{"line":80,"column":11},"source":"index.js","original":{"line":49,"column":15}},{"name":"log","generated":{"line":80,"column":19},"source":"index.js","original":{"line":49,"column":23}},{"generated":{"line":80,"column":22},"source":"index.js","original":{"line":49,"column":15}},{"generated":{"line":80,"column":23},"source":"index.js","original":{"line":49,"column":27}},{"generated":{"line":80,"column":30},"source":"index.js","original":{"line":49,"column":15}},{"generated":{"line":80,"column":31},"source":"index.js","original":{"line":49,"column":9}},{"generated":{"line":81,"column":0},"source":"index.js","original":{"line":49,"column":9}},{"generated":{"line":82,"column":0},"source":"index.js","original":{"line":38,"column":18}},{"generated":{"line":82,"column":1},"source":"index.js","original":{"line":38,"column":0}},{"name":"observable$","generated":{"line":84,"column":0},"source":"index.js","original":{"line":52,"column":0}},{"name":"subscribe","generated":{"line":84,"column":12},"source":"index.js","original":{"line":52,"column":12}},{"generated":{"line":84,"column":21},"source":"index.js","original":{"line":52,"column":0}},{"name":"subscribe","generated":{"line":84,"column":22},"source":"index.js","original":{"line":52,"column":22}},{"generated":{"line":84,"column":31},"source":"index.js","original":{"line":52,"column":0}}],"sources":{"index.js":"import { fromEvent, of, Subscriber } from 'rxjs'\nimport { scan, delay, mergeMap } from 'rxjs/operators'\n\nclass MyMergeMapSubscriber extends Subscriber {\n  constructor(sub, fn) {\n    super(sub)\n    this.fn = fn\n  }\n\n  _next(value) {\n    console.log('outer', value)\n    const o$ = this.fn(value)\n\n    o$.subscribe({\n      next: value => {\n        console.log('inner', value)\n        this.destination.next(value)\n      }\n    })\n  }\n}\n\nconst myMergeMap = fn => source => source.lift({\n  call(sub, source) {\n    source.subscribe(new MyMergeMapSubscriber(sub, fn))\n  }\n})\n\nconst observable$ = fromEvent(\n  document,\n  'click'\n).pipe(\n  scan(i => i + 1, 0),\n  // mergeMap(value => of(value).pipe(delay(500)))\n  myMergeMap(value => of(value).pipe(delay(500))) // mergeMap 源码实现\n)\n\nconst subscribe = {\n  next: value => {\n    console.log('equal:', value)\n    // 使用 mergeMap\n    // of(value).pipe(delay(500)).subscribe({\n    //   next: value => {\n    //     console.log('inner', value)\n    //   }\n    // })\n  },\n  complete: () => console.log('=====done===='),\n  error: () => console.log('error')\n}\n\nobservable$.subscribe(subscribe)"},"lineCount":null}},"hash":"940de6ef2a24db95ec842e9444a98e3a","cacheData":{"env":{}}}